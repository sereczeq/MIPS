# -------------------------------- Jakub Seredyñski 254598 ------------------------------------------


#Please write a program that asks the user for the value N>0, then calculates and displays the value N! (factorial of N).
#Secure the program against the overflow problem (best: chcek for overflow after each multiplication).
# Write the program in two versions "do-while" and "while-do".
# Answer the question: for what maximum value of N the program gives the correct value of N!. 
#Optional: prepare version of the above program that calculates N! for N up to 50.

.data
askForInput: .asciiz "Please input a number > 0: "
theResultIs: .asciiz "\nThe result is equal to: "
thereIsAnOverflow: .asciiz "There is an overflow, finishing the calculations :(\n"

# The input is saved in $s0
# The results are saved in $s1 and $s2
.text
prompt:
	li $v0, 4
	la $a0, askForInput
	syscall
getInput:
	li $v0, 5
	syscall
	move $s0, $v0

# Factorial while do
FactorialW:
	addi $t0, $s0, 1
	li $t1, 1
	loopW:
		# While
		addi $t0, $t0, -1
		beq $t0, $0, saveW
		# Do
		mult $t1, $t0
		mfhi $t1
		bgtz $t1 printOverflow
		mflo $t1
		j loopW
	saveW:
		move $s1, $t1
		
# Factorial do while
FactorialD:
	li $t0, 1
	li $t1, 1
	loopD:
		# Do
		mult $t0, $t1
		mfhi $t0
		bgtz $t0 printOverflow
		mflo $t0
		# While
		beq $t1, $s0, saveD
		addi $t1, $t1, 1
		j loopD
	saveD:
		move $s2, $t0

printResult:
	li $v0, 4
	la $a0, theResultIs
	syscall
	# Printing result W
	move $a0, $s1
	li $v0, 1
	syscall
	
	li $v0, 4
	la $a0, theResultIs
	syscall
	# Printing result D
	move $a0, $s2
	li $v0, 1
	syscall

exit:
	li $v0, 10
	syscall
	
printOverflow:
	li $v0, 4
	la $a0 thereIsAnOverflow
	syscall
	j exit
